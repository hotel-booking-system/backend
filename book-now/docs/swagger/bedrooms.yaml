openapi: 3.0.3
info:
  title: 'API Hotel Booking System'
  description: |-
    # API para gerenciar quartos em um sistema de reservas.
    
    **Objetivo:** Esta API fornece recursos para gerenciar quartos em um sistema de reservas de hotéis, incluindo 
    cadastro, listagem, busca, atualização e exclusão de quartos.
    
    ## Recursos:
    
    - **Cadastro de Quartos (POST /register):** Permite registrar um novo quarto no sistema. O corpo da requisição 
    deve conter os dados do quarto, como tipo, número, capacidade, preço, etc.
    - **Listar Quartos (GET /list):** Retorna uma lista de todos os quartos cadastrados no sistema. A resposta pode
    ser filtrada por tipo, número, capacidade, preço, etc.
    - **Buscar Quarto por ID(GET /{id}):** Retorna os dados de um quarto específico, identificado pelo seu ID.
    - **Atualizar Quarto por ID (PUT /{id}):** Permite atualizar os dados de um quarto existente. O corpo da requisição 
    deve conter os dados atualizados do quarto
    - **Excluir Quarto por ID (DELETE /{id}):** Exclui um quarto do sistema.
    
    ## Códigos de Erro:
    
    - **200 OK:** Operação realizada com sucesso.
    - **201 Created:** Recurso cadastrado com sucesso!
    - **204 No Content:** Operação realizada com sucesso.
    - **400 Bad Request:** Ops, algo deu errado com sua requisição. Verifique se os dados estão corretos.
    - **401 Unauthorized:** Você precisa se conectar para acessar este recurso. Faça login ou crie uma conta.
    - **403 Forbidden:** Você não tem permissão para acessar este recurso. Entre em contato com o administrador para 
    solicitar acesso.
    - **404 Not Found:** O que você procura não foi encontrado. Verifique se o endereço está correto ou tente buscar por 
    algo diferente.
    - **409 Conflict**: Este dado já está sendo utilizado. Tente outro ou entre em contato com o suporte.
    - **500 Internal Server Error:** Ops, estamos com problemas técnicos. Tente novamente mais tarde.

  version: 1.0.0
servers:
  - url: 'http:localhost:8585/api/v1/bedrooms'
tags:
  - name: bedroom
    description: 'Operações relacionadas a quartos'
paths:
  /register:
    post:
      tags:
        - bedroom
      summary: 'Cadastrar novo quarto'
      description: 'Cria um novo quarto no sistema.'
      operationId: registerBedroom
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BedroomRequest'
      responses:
        '201':
          description: 'Quarto criado com sucesso.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BedroomResponse'
        '400':
          description: 'Bad Request'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: 'Número do quarto já cadastrado.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /list:
    get:
      tags:
        - bedroom
      summary: 'Lista todos os quartos'
      description: 'Retorna uma lista de todos os quartos cadastrados no sistema'
      operationId: listBedrooms
      responses:
        '200':
          description: 'Lista de quartos retornada com sucesso'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BedroomResponse'
        '500':
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /{id}:
    get:
      tags:
        - bedroom
      summary: 'Busca um quarto por ID'
      description: 'Retorna um quarto específico com base no ID fornecido'
      operationId: getBedroomById
      parameters:
        - name: id
          in: path
          required: true
          description: 'Identificador único do quarto (Unique bedroom identifier)'
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'Quarto encontrado com sucesso.'
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/BedroomResponse'
        '404':
          description: 'Quarto não encontrado'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - bedroom
      summary: 'Atualizar um quarto por ID'
      description: 'Atualiza um quarto específico com base no ID fornecido e nos dados enviados no campo da requisição.'
      operationId: updateBedroomById
      parameters:
        - name: id
          in: path
          required: true
          description: 'Identificador único do quarto (Unique bedroom identifier)'
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BedroomRequest'
      responses:
        '204':
          description: 'Quarto atualizado com sucesso.'
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/BedroomResponse'
        '404':
          description: 'Quarto não encontrado'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - bedroom
      summary: 'Excluir um quarto por ID'
      description: 'Exclui um quarto específico com base no ID fornecidos'
      operationId: deleteBedroomById
      parameters:
        - name: id
          in: path
          required: true
          description: 'O ID do quarto'
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: 'Quarto excluído com sucesso.'
        '404':
          description: 'Quarto não encontrado'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
components:
  schemas:
    BedroomRequest:
      type: object
      required:
        - number
        - roomType
        - capacity
        - dailyRate
        - description
        - hotelId
      properties:
        number:
          type: string
          minLength: 1
          maxLength: 10
          example: 101
        roomType:
          $ref: '#/components/schemas/RoomType'
        capacity:
          type: integer
          minimum: 1
          maximum: 10
        dailyRate:
          type: number
          format: decimal
          minimum: 0.01
          description: 'Decimal value with up to two decimal places'
          example: 159.99
        description:
          type: string
          minLength: 5
        available:
          type: boolean
          default: true
        hotelId:
          type: integer
          format: int64
    BedroomResponse:
      type: object
      properties:
        bedroomId:
          type: integer
          format: int64
        number:
          type: string
        roomType:
          $ref: '#/components/schemas/RoomType'
        capacity:
          type: integer
        dailyRate:
          type: number
          format: decimal
        description:
          type: string
        available:
          type: boolean
        hotelId:
          type: integer
          format: int64
    RoomType:
      type: string
      enum:
        - SINGLE
        - DOUBLE
        - FAMILY
        - LUXURY
    ErrorResponse:
      type: object
      properties:
        status:
          type: string
        error:
          type: string
        message:
          type: string
      description: 'General error response structure'